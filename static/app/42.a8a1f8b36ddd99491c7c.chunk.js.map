{"version":3,"sources":["webpack://space-1/./src/main/webapp/app/account/register/register.vue?79ee","webpack://space-1/./src/main/webapp/app/account/register/register.component.ts","webpack://space-1/./src/main/webapp/app/account/register/register.component.ts?fa83","webpack://space-1/./src/main/webapp/app/account/register/register.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","id","domProps","textContent","_s","$t","_v","success","role","innerHTML","_e","error","errorUserExists","errorEmailExists","name","on","submit","$event","preventDefault","register","for","directives","rawName","value","$v","registerAccount","login","$model","expression","class","valid","$invalid","invalid","type","required","minlength","maxlength","pattern","placeholder","input","target","composing","$set","$anyDirty","minLength","maxLength","email","password","confirmPassword","$dirty","sameAsPassword","disabled","click","openLogin","staticRenderFns","_withStripped","loginPattern","validations","undefined","langKey","$store","getters","currentLanguage","registerService","processRegistration","then","catch","response","status","data","loginService","$root","Register","component","options","__file"],"mappings":"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","file":"app/42.a8a1f8b36ddd99491c7c.chunk.js","sourcesContent":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"row justify-content-center\" }, [\n      _c(\"div\", { staticClass: \"col-md-8 toastify-container\" }, [\n        _c(\n          \"h1\",\n          {\n            attrs: { id: \"register-title\", \"data-cy\": \"registerTitle\" },\n            domProps: { textContent: _vm._s(_vm.$t(\"register.title\")) }\n          },\n          [_vm._v(\"Registration\")]\n        ),\n        _vm._v(\" \"),\n        _vm.success\n          ? _c(\n              \"div\",\n              {\n                staticClass: \"alert alert-success\",\n                attrs: { role: \"alert\" },\n                domProps: {\n                  innerHTML: _vm._s(_vm.$t(\"register.messages.success\"))\n                }\n              },\n              [\n                _c(\"strong\", [_vm._v(\"Registration saved!\")]),\n                _vm._v(\" Please check your email for confirmation.\\n      \")\n              ]\n            )\n          : _vm._e(),\n        _vm._v(\" \"),\n        _vm.error\n          ? _c(\n              \"div\",\n              {\n                staticClass: \"alert alert-danger\",\n                attrs: { role: \"alert\" },\n                domProps: {\n                  innerHTML: _vm._s(_vm.$t(\"register.messages.error.fail\"))\n                }\n              },\n              [\n                _c(\"strong\", [_vm._v(\"Registration failed!\")]),\n                _vm._v(\" Please try again later.\\n      \")\n              ]\n            )\n          : _vm._e(),\n        _vm._v(\" \"),\n        _vm.errorUserExists\n          ? _c(\n              \"div\",\n              {\n                staticClass: \"alert alert-danger\",\n                attrs: { role: \"alert\" },\n                domProps: {\n                  innerHTML: _vm._s(\n                    _vm.$t(\"register.messages.error.userexists\")\n                  )\n                }\n              },\n              [\n                _c(\"strong\", [_vm._v(\"Login name already registered!\")]),\n                _vm._v(\" Please choose another one.\\n      \")\n              ]\n            )\n          : _vm._e(),\n        _vm._v(\" \"),\n        _vm.errorEmailExists\n          ? _c(\n              \"div\",\n              {\n                staticClass: \"alert alert-danger\",\n                attrs: { role: \"alert\" },\n                domProps: {\n                  innerHTML: _vm._s(\n                    _vm.$t(\"register.messages.error.emailexists\")\n                  )\n                }\n              },\n              [\n                _c(\"strong\", [_vm._v(\"Email is already in use!\")]),\n                _vm._v(\" Please choose another one.\\n      \")\n              ]\n            )\n          : _vm._e()\n      ])\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"row justify-content-center\" }, [\n      _c(\"div\", { staticClass: \"col-md-8\" }, [\n        !_vm.success\n          ? _c(\n              \"form\",\n              {\n                attrs: {\n                  id: \"register-form\",\n                  name: \"registerForm\",\n                  role: \"form\",\n                  \"no-validate\": \"\"\n                },\n                on: {\n                  submit: function($event) {\n                    $event.preventDefault()\n                    return _vm.register()\n                  }\n                }\n              },\n              [\n                _c(\"div\", { staticClass: \"form-group\" }, [\n                  _c(\n                    \"label\",\n                    {\n                      staticClass: \"form-control-label\",\n                      attrs: { for: \"username\" },\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"global.form['username.label']\")\n                        )\n                      }\n                    },\n                    [_vm._v(\"Username\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.$v.registerAccount.login.$model,\n                        expression: \"$v.registerAccount.login.$model\"\n                      }\n                    ],\n                    staticClass: \"form-control\",\n                    class: {\n                      valid: !_vm.$v.registerAccount.login.$invalid,\n                      invalid: _vm.$v.registerAccount.login.$invalid\n                    },\n                    attrs: {\n                      type: \"text\",\n                      id: \"username\",\n                      name: \"login\",\n                      required: \"\",\n                      minlength: \"1\",\n                      maxlength: \"50\",\n                      pattern:\n                        \"^[a-zA-Z0-9!#$&'*+=?^_`{|}~.-]+@?[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*$\",\n                      placeholder: _vm.$t(\n                        \"global.form['username.placeholder']\"\n                      ),\n                      \"data-cy\": \"username\"\n                    },\n                    domProps: { value: _vm.$v.registerAccount.login.$model },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(\n                          _vm.$v.registerAccount.login,\n                          \"$model\",\n                          $event.target.value\n                        )\n                      }\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _vm.$v.registerAccount.login.$anyDirty &&\n                  _vm.$v.registerAccount.login.$invalid\n                    ? _c(\"div\", [\n                        !_vm.$v.registerAccount.login.required\n                          ? _c(\n                              \"small\",\n                              {\n                                staticClass: \"form-text text-danger\",\n                                domProps: {\n                                  textContent: _vm._s(\n                                    _vm.$t(\n                                      \"register.messages.validate.login.required\"\n                                    )\n                                  )\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n              Your username is required.\\n            \"\n                                )\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        !_vm.$v.registerAccount.login.minLength\n                          ? _c(\n                              \"small\",\n                              {\n                                staticClass: \"form-text text-danger\",\n                                domProps: {\n                                  textContent: _vm._s(\n                                    _vm.$t(\n                                      \"register.messages.validate.login.minlength\"\n                                    )\n                                  )\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n              Your username is required to be at least 1 character.\\n            \"\n                                )\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        !_vm.$v.registerAccount.login.maxLength\n                          ? _c(\n                              \"small\",\n                              {\n                                staticClass: \"form-text text-danger\",\n                                domProps: {\n                                  textContent: _vm._s(\n                                    _vm.$t(\n                                      \"register.messages.validate.login.maxlength\"\n                                    )\n                                  )\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n              Your username cannot be longer than 50 characters.\\n            \"\n                                )\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        !_vm.$v.registerAccount.login.pattern\n                          ? _c(\n                              \"small\",\n                              {\n                                staticClass: \"form-text text-danger\",\n                                domProps: {\n                                  textContent: _vm._s(\n                                    _vm.$t(\n                                      \"register.messages.validate.login.pattern\"\n                                    )\n                                  )\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n              Your username can only contain letters and digits.\\n            \"\n                                )\n                              ]\n                            )\n                          : _vm._e()\n                      ])\n                    : _vm._e()\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"form-group\" }, [\n                  _c(\n                    \"label\",\n                    {\n                      staticClass: \"form-control-label\",\n                      attrs: { for: \"email\" },\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"global.form['email.label']\")\n                        )\n                      }\n                    },\n                    [_vm._v(\"Email\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.$v.registerAccount.email.$model,\n                        expression: \"$v.registerAccount.email.$model\"\n                      }\n                    ],\n                    staticClass: \"form-control\",\n                    class: {\n                      valid: !_vm.$v.registerAccount.email.$invalid,\n                      invalid: _vm.$v.registerAccount.email.$invalid\n                    },\n                    attrs: {\n                      type: \"email\",\n                      id: \"email\",\n                      name: \"email\",\n                      minlength: \"5\",\n                      maxlength: \"254\",\n                      email: \"\",\n                      required: \"\",\n                      placeholder: _vm.$t(\"global.form['email.placeholder']\"),\n                      \"data-cy\": \"email\"\n                    },\n                    domProps: { value: _vm.$v.registerAccount.email.$model },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(\n                          _vm.$v.registerAccount.email,\n                          \"$model\",\n                          $event.target.value\n                        )\n                      }\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _vm.$v.registerAccount.email.$anyDirty &&\n                  _vm.$v.registerAccount.email.$invalid\n                    ? _c(\"div\", [\n                        !_vm.$v.registerAccount.email.required\n                          ? _c(\n                              \"small\",\n                              {\n                                staticClass: \"form-text text-danger\",\n                                domProps: {\n                                  textContent: _vm._s(\n                                    _vm.$t(\n                                      \"global.messages.validate.email.required\"\n                                    )\n                                  )\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n              Your email is required.\\n            \"\n                                )\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        !_vm.$v.registerAccount.email.email\n                          ? _c(\n                              \"small\",\n                              {\n                                staticClass: \"form-text text-danger\",\n                                domProps: {\n                                  textContent: _vm._s(\n                                    _vm.$t(\n                                      \"global.messages.validate.email.invalid\"\n                                    )\n                                  )\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n              Your email is invalid.\\n            \"\n                                )\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        !_vm.$v.registerAccount.email.minLength\n                          ? _c(\n                              \"small\",\n                              {\n                                staticClass: \"form-text text-danger\",\n                                domProps: {\n                                  textContent: _vm._s(\n                                    _vm.$t(\n                                      \"global.messages.validate.email.minlength\"\n                                    )\n                                  )\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n              Your email is required to be at least 5 characters.\\n            \"\n                                )\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        !_vm.$v.registerAccount.email.maxLength\n                          ? _c(\n                              \"small\",\n                              {\n                                staticClass: \"form-text text-danger\",\n                                domProps: {\n                                  textContent: _vm._s(\n                                    _vm.$t(\n                                      \"global.messages.validate.email.maxlength\"\n                                    )\n                                  )\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n              Your email cannot be longer than 100 characters.\\n            \"\n                                )\n                              ]\n                            )\n                          : _vm._e()\n                      ])\n                    : _vm._e()\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"form-group\" }, [\n                  _c(\n                    \"label\",\n                    {\n                      staticClass: \"form-control-label\",\n                      attrs: { for: \"firstPassword\" },\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"global.form['newpassword.label']\")\n                        )\n                      }\n                    },\n                    [_vm._v(\"New password\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.$v.registerAccount.password.$model,\n                        expression: \"$v.registerAccount.password.$model\"\n                      }\n                    ],\n                    staticClass: \"form-control\",\n                    class: {\n                      valid: !_vm.$v.registerAccount.password.$invalid,\n                      invalid: _vm.$v.registerAccount.password.$invalid\n                    },\n                    attrs: {\n                      type: \"password\",\n                      id: \"firstPassword\",\n                      name: \"password\",\n                      minlength: \"4\",\n                      maxlength: \"50\",\n                      required: \"\",\n                      placeholder: _vm.$t(\n                        \"global.form['newpassword.placeholder']\"\n                      ),\n                      \"data-cy\": \"firstPassword\"\n                    },\n                    domProps: { value: _vm.$v.registerAccount.password.$model },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(\n                          _vm.$v.registerAccount.password,\n                          \"$model\",\n                          $event.target.value\n                        )\n                      }\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _vm.$v.registerAccount.password.$anyDirty &&\n                  _vm.$v.registerAccount.password.$invalid\n                    ? _c(\"div\", [\n                        !_vm.$v.registerAccount.password.required\n                          ? _c(\n                              \"small\",\n                              {\n                                staticClass: \"form-text text-danger\",\n                                domProps: {\n                                  textContent: _vm._s(\n                                    _vm.$t(\n                                      \"global.messages.validate.newpassword.required\"\n                                    )\n                                  )\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n              Your password is required.\\n            \"\n                                )\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        !_vm.$v.registerAccount.password.minLength\n                          ? _c(\n                              \"small\",\n                              {\n                                staticClass: \"form-text text-danger\",\n                                domProps: {\n                                  textContent: _vm._s(\n                                    _vm.$t(\n                                      \"global.messages.validate.newpassword.minlength\"\n                                    )\n                                  )\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n              Your password is required to be at least 4 characters.\\n            \"\n                                )\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        !_vm.$v.registerAccount.password.maxLength\n                          ? _c(\n                              \"small\",\n                              {\n                                staticClass: \"form-text text-danger\",\n                                domProps: {\n                                  textContent: _vm._s(\n                                    _vm.$t(\n                                      \"global.messages.validate.newpassword.maxlength\"\n                                    )\n                                  )\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n              Your password cannot be longer than 50 characters.\\n            \"\n                                )\n                              ]\n                            )\n                          : _vm._e()\n                      ])\n                    : _vm._e()\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"form-group\" }, [\n                  _c(\n                    \"label\",\n                    {\n                      staticClass: \"form-control-label\",\n                      attrs: { for: \"secondPassword\" },\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"global.form['confirmpassword.label']\")\n                        )\n                      }\n                    },\n                    [_vm._v(\"New password confirmation\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.$v.confirmPassword.$model,\n                        expression: \"$v.confirmPassword.$model\"\n                      }\n                    ],\n                    staticClass: \"form-control\",\n                    class: {\n                      valid: !_vm.$v.confirmPassword.$invalid,\n                      invalid: _vm.$v.confirmPassword.$invalid\n                    },\n                    attrs: {\n                      type: \"password\",\n                      id: \"secondPassword\",\n                      name: \"confirmPasswordInput\",\n                      minlength: \"4\",\n                      maxlength: \"50\",\n                      required: \"\",\n                      placeholder: _vm.$t(\n                        \"global.form['confirmpassword.placeholder']\"\n                      ),\n                      \"data-cy\": \"secondPassword\"\n                    },\n                    domProps: { value: _vm.$v.confirmPassword.$model },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(\n                          _vm.$v.confirmPassword,\n                          \"$model\",\n                          $event.target.value\n                        )\n                      }\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _vm.$v.confirmPassword.$dirty &&\n                  _vm.$v.confirmPassword.$invalid\n                    ? _c(\"div\", [\n                        !_vm.$v.confirmPassword.required\n                          ? _c(\n                              \"small\",\n                              {\n                                staticClass: \"form-text text-danger\",\n                                domProps: {\n                                  textContent: _vm._s(\n                                    _vm.$t(\n                                      \"global.messages.validate.confirmpassword.required\"\n                                    )\n                                  )\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n              Your confirmation password is required.\\n            \"\n                                )\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        !_vm.$v.confirmPassword.minLength\n                          ? _c(\n                              \"small\",\n                              {\n                                staticClass: \"form-text text-danger\",\n                                domProps: {\n                                  textContent: _vm._s(\n                                    _vm.$t(\n                                      \"global.messages.validate.confirmpassword.minlength\"\n                                    )\n                                  )\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n              Your confirmation password is required to be at least 4 characters.\\n            \"\n                                )\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        !_vm.$v.confirmPassword.maxLength\n                          ? _c(\n                              \"small\",\n                              {\n                                staticClass: \"form-text text-danger\",\n                                domProps: {\n                                  textContent: _vm._s(\n                                    _vm.$t(\n                                      \"global.messages.validate.confirmpassword.maxlength\"\n                                    )\n                                  )\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n              Your confirmation password cannot be longer than 50 characters.\\n            \"\n                                )\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        !_vm.$v.confirmPassword.sameAsPassword\n                          ? _c(\n                              \"small\",\n                              {\n                                staticClass: \"form-text text-danger\",\n                                domProps: {\n                                  textContent: _vm._s(\n                                    _vm.$t(\"global.messages.error.dontmatch\")\n                                  )\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n              The password and its confirmation do not match!\\n            \"\n                                )\n                              ]\n                            )\n                          : _vm._e()\n                      ])\n                    : _vm._e()\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-primary\",\n                    attrs: {\n                      type: \"submit\",\n                      disabled: _vm.$v.$invalid,\n                      \"data-cy\": \"submit\"\n                    },\n                    domProps: {\n                      textContent: _vm._s(_vm.$t(\"register.form.button\"))\n                    }\n                  },\n                  [_vm._v(\"\\n          Register\\n        \")]\n                )\n              ]\n            )\n          : _vm._e(),\n        _vm._v(\" \"),\n        _c(\"p\"),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"alert alert-warning\" }, [\n          _c(\n            \"span\",\n            {\n              domProps: {\n                textContent: _vm._s(\n                  _vm.$t(\"global.messages.info.authenticated.prefix\")\n                )\n              }\n            },\n            [_vm._v(\"If you want to \")]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"a\",\n            {\n              staticClass: \"alert-link\",\n              domProps: {\n                textContent: _vm._s(\n                  _vm.$t(\"global.messages.info.authenticated.link\")\n                )\n              },\n              on: {\n                click: function($event) {\n                  return _vm.openLogin()\n                }\n              }\n            },\n            [_vm._v(\"sign in\")]\n          ),\n          _c(\n            \"span\",\n            {\n              domProps: {\n                innerHTML: _vm._s(\n                  _vm.$t(\"global.messages.info.authenticated.suffix\")\n                )\n              }\n            },\n            [\n              _vm._v(\", you can try the default accounts:\"),\n              _c(\"br\"),\n              _vm._v('- Administrator (login=\"admin\" and password=\"admin\") '),\n              _c(\"br\"),\n              _vm._v('- User (login=\"user\" and\\n          password=\"user\").')\n            ]\n          )\n        ])\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nimport { Component, Inject } from 'vue-property-decorator';\nimport { email, helpers, maxLength, minLength, required, sameAs } from 'vuelidate/lib/validators';\nimport LoginService from '@/account/login.service';\nimport RegisterService from '@/account/register/register.service';\nimport { EMAIL_ALREADY_USED_TYPE, LOGIN_ALREADY_USED_TYPE } from '@/constants';\n\nconst loginPattern = helpers.regex('alpha', /^[a-zA-Z0-9!$&*+=?^_`{|}~.-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*$|^[_.@A-Za-z0-9-]+$/);\nconst validations: any = {\n  registerAccount: {\n    login: {\n      required,\n      minLength: minLength(1),\n      maxLength: maxLength(50),\n      pattern: loginPattern,\n    },\n    email: {\n      required,\n      minLength: minLength(5),\n      maxLength: maxLength(254),\n      email,\n    },\n    password: {\n      required,\n      minLength: minLength(4),\n      maxLength: maxLength(254),\n    },\n  },\n  confirmPassword: {\n    required,\n    minLength: minLength(4),\n    maxLength: maxLength(50),\n    // prettier-ignore\n    sameAsPassword: sameAs(function() {\n      return this.registerAccount.password;\n    }),\n  },\n};\n\n@Component({\n  validations,\n})\nexport default class Register extends Vue {\n  @Inject('registerService') private registerService: () => RegisterService;\n  @Inject('loginService') private loginService: () => LoginService;\n  public registerAccount: any = {\n    login: undefined,\n    email: undefined,\n    password: undefined,\n  };\n  public confirmPassword: any = null;\n  public error = '';\n  public errorEmailExists = '';\n  public errorUserExists = '';\n  public success = false;\n\n  public register(): void {\n    this.error = null;\n    this.errorUserExists = null;\n    this.errorEmailExists = null;\n    this.registerAccount.langKey = this.$store.getters.currentLanguage;\n    this.registerService()\n      .processRegistration(this.registerAccount)\n      .then(() => {\n        this.success = true;\n      })\n      .catch(error => {\n        this.success = null;\n        if (error.response.status === 400 && error.response.data.type === LOGIN_ALREADY_USED_TYPE) {\n          this.errorUserExists = 'ERROR';\n        } else if (error.response.status === 400 && error.response.data.type === EMAIL_ALREADY_USED_TYPE) {\n          this.errorEmailExists = 'ERROR';\n        } else {\n          this.error = 'ERROR';\n        }\n      });\n  }\n\n  public openLogin(): void {\n    this.loginService().openLogin((<any>this).$root);\n  }\n}\n","import mod from \"-!../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1[0].rules[0].use[0]!./register.component.ts?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1[0].rules[0].use[0]!./register.component.ts?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./register.vue?vue&type=template&id=e76dc7ec&\"\nimport script from \"./register.component.ts?vue&type=script&lang=ts&\"\nexport * from \"./register.component.ts?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\DELL\\\\1_Vue\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('e76dc7ec')) {\n      api.createRecord('e76dc7ec', component.options)\n    } else {\n      api.reload('e76dc7ec', component.options)\n    }\n    module.hot.accept(\"./register.vue?vue&type=template&id=e76dc7ec&\", function () {\n      api.rerender('e76dc7ec', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/main/webapp/app/account/register/register.vue\"\nexport default component.exports"],"sourceRoot":""}