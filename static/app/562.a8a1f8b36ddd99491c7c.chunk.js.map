{"version":3,"sources":["webpack://space-1/./src/main/webapp/app/account/reset-password/init/reset-password-init.vue?b071","webpack://space-1/./src/main/webapp/app/account/reset-password/init/reset-password-init.component.ts","webpack://space-1/./src/main/webapp/app/account/reset-password/init/reset-password-init.component.ts?a3a2","webpack://space-1/./src/main/webapp/app/account/reset-password/init/reset-password-init.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","domProps","textContent","_s","$t","_v","success","_e","attrs","name","role","on","submit","$event","preventDefault","requestReset","for","directives","rawName","value","$v","resetAccount","email","$model","expression","class","valid","$invalid","invalid","type","id","placeholder","minlength","maxlength","required","input","target","composing","$set","$anyDirty","minLength","maxLength","disabled","staticRenderFns","_withStripped","validations","error","headers","then","catch","ResetPasswordInit","component","options","__file"],"mappings":"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","file":"app/562.a8a1f8b36ddd99491c7c.chunk.js","sourcesContent":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"row justify-content-center\" }, [\n      _c(\"div\", { staticClass: \"col-md-8\" }, [\n        _c(\n          \"h1\",\n          { domProps: { textContent: _vm._s(_vm.$t(\"reset.request.title\")) } },\n          [_vm._v(\"Reset your password\")]\n        ),\n        _vm._v(\" \"),\n        !_vm.success\n          ? _c(\"div\", { staticClass: \"alert alert-warning\" }, [\n              _c(\n                \"p\",\n                {\n                  domProps: {\n                    textContent: _vm._s(_vm.$t(\"reset.request.messages.info\"))\n                  }\n                },\n                [_vm._v(\"Enter the email address you used to register.\")]\n              )\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        _vm.success\n          ? _c(\"div\", { staticClass: \"alert alert-success\" }, [\n              _c(\n                \"p\",\n                {\n                  domProps: {\n                    textContent: _vm._s(\n                      _vm.$t(\"reset.request.messages.success\")\n                    )\n                  }\n                },\n                [\n                  _vm._v(\n                    \"Check your emails for details on how to reset your password.\"\n                  )\n                ]\n              )\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        !_vm.success\n          ? _c(\n              \"form\",\n              {\n                attrs: { name: \"form\", role: \"form\" },\n                on: {\n                  submit: function($event) {\n                    $event.preventDefault()\n                    return _vm.requestReset()\n                  }\n                }\n              },\n              [\n                _c(\"div\", { staticClass: \"form-group\" }, [\n                  _c(\n                    \"label\",\n                    {\n                      staticClass: \"form-control-label\",\n                      attrs: { for: \"email\" },\n                      domProps: {\n                        textContent: _vm._s(\n                          _vm.$t(\"global.form['email.label']\")\n                        )\n                      }\n                    },\n                    [_vm._v(\"Email\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.$v.resetAccount.email.$model,\n                        expression: \"$v.resetAccount.email.$model\"\n                      }\n                    ],\n                    staticClass: \"form-control\",\n                    class: {\n                      valid: !_vm.$v.resetAccount.email.$invalid,\n                      invalid: _vm.$v.resetAccount.email.$invalid\n                    },\n                    attrs: {\n                      type: \"email\",\n                      id: \"email\",\n                      name: \"email\",\n                      placeholder: _vm.$t(\"global.form['email.placeholder']\"),\n                      minlength: \"5\",\n                      maxlength: \"254\",\n                      email: \"\",\n                      required: \"\",\n                      \"data-cy\": \"emailResetPassword\"\n                    },\n                    domProps: { value: _vm.$v.resetAccount.email.$model },\n                    on: {\n                      input: function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(\n                          _vm.$v.resetAccount.email,\n                          \"$model\",\n                          $event.target.value\n                        )\n                      }\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _vm.$v.resetAccount.email.$anyDirty &&\n                  _vm.$v.resetAccount.email.$invalid\n                    ? _c(\"div\", [\n                        !_vm.$v.resetAccount.email.required\n                          ? _c(\n                              \"small\",\n                              {\n                                staticClass: \"form-text text-danger\",\n                                domProps: {\n                                  textContent: _vm._s(\n                                    _vm.$t(\n                                      \"global.messages.validate.email.required\"\n                                    )\n                                  )\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n              Your email is required.\\n            \"\n                                )\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        !_vm.$v.resetAccount.email.email\n                          ? _c(\n                              \"small\",\n                              {\n                                staticClass: \"form-text text-danger\",\n                                domProps: {\n                                  textContent: _vm._s(\n                                    _vm.$t(\n                                      \"global.messages.validate.email.invalid\"\n                                    )\n                                  )\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n              Your email is invalid.\\n            \"\n                                )\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        !_vm.$v.resetAccount.email.minLength\n                          ? _c(\n                              \"small\",\n                              {\n                                staticClass: \"form-text text-danger\",\n                                domProps: {\n                                  textContent: _vm._s(\n                                    _vm.$t(\n                                      \"global.messages.validate.email.minlength\"\n                                    )\n                                  )\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n              Your email is required to be at least 5 characters.\\n            \"\n                                )\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        !_vm.$v.resetAccount.email.maxLength\n                          ? _c(\n                              \"small\",\n                              {\n                                staticClass: \"form-text text-danger\",\n                                domProps: {\n                                  textContent: _vm._s(\n                                    _vm.$t(\n                                      \"global.messages.validate.email.maxlength\"\n                                    )\n                                  )\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n              Your email cannot be longer than 100 characters.\\n            \"\n                                )\n                              ]\n                            )\n                          : _vm._e()\n                      ])\n                    : _vm._e()\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-primary\",\n                    attrs: {\n                      type: \"submit\",\n                      disabled: _vm.$v.resetAccount.$invalid,\n                      \"data-cy\": \"submit\"\n                    },\n                    domProps: {\n                      textContent: _vm._s(_vm.$t(\"reset.request.form.button\"))\n                    }\n                  },\n                  [_vm._v(\"\\n          Reset\\n        \")]\n                )\n              ]\n            )\n          : _vm._e()\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { email, maxLength, minLength, required } from 'vuelidate/lib/validators';\nimport axios from 'axios';\nimport { Vue, Component } from 'vue-property-decorator';\n\nconst validations = {\n  resetAccount: {\n    email: {\n      required,\n      minLength: minLength(5),\n      maxLength: maxLength(254),\n      email,\n    },\n  },\n};\n\ninterface ResetAccount {\n  email: string;\n}\n\n@Component({\n  validations,\n})\nexport default class ResetPasswordInit extends Vue {\n  public success: boolean = null;\n  public error: string = null;\n  public resetAccount: ResetAccount = {\n    email: null,\n  };\n\n  public requestReset(): void {\n    this.error = null;\n    axios\n      .post('api/account/reset-password/init', this.resetAccount.email, {\n        headers: {\n          'content-type': 'text/plain',\n        },\n      })\n      .then(() => {\n        this.success = true;\n      })\n      .catch(error => {\n        this.success = null;\n        this.error = 'ERROR';\n      });\n  }\n}\n","import mod from \"-!../../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1[0].rules[0].use[0]!./reset-password-init.component.ts?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1[0].rules[0].use[0]!./reset-password-init.component.ts?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./reset-password-init.vue?vue&type=template&id=d9107294&\"\nimport script from \"./reset-password-init.component.ts?vue&type=script&lang=ts&\"\nexport * from \"./reset-password-init.component.ts?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\DELL\\\\1_Vue\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('d9107294')) {\n      api.createRecord('d9107294', component.options)\n    } else {\n      api.reload('d9107294', component.options)\n    }\n    module.hot.accept(\"./reset-password-init.vue?vue&type=template&id=d9107294&\", function () {\n      api.rerender('d9107294', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/main/webapp/app/account/reset-password/init/reset-password-init.vue\"\nexport default component.exports"],"sourceRoot":""}