{"version":3,"sources":["webpack://space-1/./src/main/webapp/app/account/change-password/change-password.vue?f682","webpack://space-1/./src/main/webapp/app/account/change-password/change-password.component.ts","webpack://space-1/./src/main/webapp/app/account/change-password/change-password.component.ts?a3e0","webpack://space-1/./src/main/webapp/app/account/change-password/change-password.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","account","attrs","id","domProps","innerHTML","_s","$t","username","_v","_e","success","role","error","doNotMatch","textContent","name","on","submit","$event","preventDefault","changePassword","for","directives","rawName","value","$v","resetPassword","currentPassword","$model","expression","class","valid","$invalid","invalid","type","placeholder","required","input","target","composing","$set","$anyDirty","newPassword","minlength","maxlength","minLength","maxLength","confirmPassword","resetAccount","sameAsPassword","disabled","staticRenderFns","_withStripped","validations","vm","then","catch","$store","getters","login","ChangePassword","computed","component","options","__file"],"mappings":"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","file":"app/626.a8a1f8b36ddd99491c7c.chunk.js","sourcesContent":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"row justify-content-center\" }, [\n      _c(\"div\", { staticClass: \"col-md-8 toastify-container\" }, [\n        _vm.account\n          ? _c(\"h2\", { attrs: { id: \"password-title\" } }, [\n              _c(\n                \"span\",\n                {\n                  domProps: {\n                    innerHTML: _vm._s(\n                      _vm.$t(\"password.title\", { username: _vm.username })\n                    )\n                  }\n                },\n                [\n                  _vm._v(\"\\n          Password for [\"),\n                  _c(\"strong\", [_vm._v(_vm._s(_vm.username))]),\n                  _vm._v(\"]\")\n                ]\n              )\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        _vm.success\n          ? _c(\n              \"div\",\n              {\n                staticClass: \"alert alert-success\",\n                attrs: { role: \"alert\" },\n                domProps: {\n                  innerHTML: _vm._s(_vm.$t(\"password.messages.success\"))\n                }\n              },\n              [_c(\"strong\", [_vm._v(\"Password changed!\")])]\n            )\n          : _vm._e(),\n        _vm._v(\" \"),\n        _vm.error\n          ? _c(\n              \"div\",\n              {\n                staticClass: \"alert alert-danger\",\n                attrs: { role: \"alert\" },\n                domProps: {\n                  innerHTML: _vm._s(_vm.$t(\"password.messages.error\"))\n                }\n              },\n              [\n                _c(\"strong\", [_vm._v(\"An error has occurred!\")]),\n                _vm._v(\" The password could not be changed.\\n      \")\n              ]\n            )\n          : _vm._e(),\n        _vm._v(\" \"),\n        _vm.doNotMatch\n          ? _c(\n              \"div\",\n              {\n                staticClass: \"alert alert-danger\",\n                attrs: { role: \"alert\" },\n                domProps: {\n                  textContent: _vm._s(_vm.$t(\"global.messages.error.dontmatch\"))\n                }\n              },\n              [\n                _vm._v(\n                  \"\\n        The password and its confirmation do not match!\\n      \"\n                )\n              ]\n            )\n          : _vm._e(),\n        _vm._v(\" \"),\n        _c(\n          \"form\",\n          {\n            attrs: { name: \"form\", role: \"form\", id: \"password-form\" },\n            on: {\n              submit: function($event) {\n                $event.preventDefault()\n                return _vm.changePassword()\n              }\n            }\n          },\n          [\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\n                \"label\",\n                {\n                  staticClass: \"form-control-label\",\n                  attrs: { for: \"currentPassword\" },\n                  domProps: {\n                    textContent: _vm._s(\n                      _vm.$t(\"global.form['currentpassword.label']\")\n                    )\n                  }\n                },\n                [_vm._v(\"Current password\")]\n              ),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.$v.resetPassword.currentPassword.$model,\n                    expression: \"$v.resetPassword.currentPassword.$model\"\n                  }\n                ],\n                staticClass: \"form-control\",\n                class: {\n                  valid: !_vm.$v.resetPassword.currentPassword.$invalid,\n                  invalid: _vm.$v.resetPassword.currentPassword.$invalid\n                },\n                attrs: {\n                  type: \"password\",\n                  id: \"currentPassword\",\n                  name: \"currentPassword\",\n                  placeholder: _vm.$t(\n                    \"global.form['currentpassword.placeholder']\"\n                  ),\n                  required: \"\",\n                  \"data-cy\": \"currentPassword\"\n                },\n                domProps: {\n                  value: _vm.$v.resetPassword.currentPassword.$model\n                },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(\n                      _vm.$v.resetPassword.currentPassword,\n                      \"$model\",\n                      $event.target.value\n                    )\n                  }\n                }\n              }),\n              _vm._v(\" \"),\n              _vm.$v.resetPassword.currentPassword.$anyDirty &&\n              _vm.$v.resetPassword.currentPassword.$invalid\n                ? _c(\"div\", [\n                    !_vm.$v.resetPassword.currentPassword.required\n                      ? _c(\n                          \"small\",\n                          {\n                            staticClass: \"form-text text-danger\",\n                            domProps: {\n                              textContent: _vm._s(\n                                _vm.$t(\n                                  \"global.messages.validate.newpassword.required\"\n                                )\n                              )\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n              Your password is required.\\n            \"\n                            )\n                          ]\n                        )\n                      : _vm._e()\n                  ])\n                : _vm._e()\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\n                \"label\",\n                {\n                  staticClass: \"form-control-label\",\n                  attrs: { for: \"newPassword\" },\n                  domProps: {\n                    textContent: _vm._s(\n                      _vm.$t(\"global.form['newpassword.label']\")\n                    )\n                  }\n                },\n                [_vm._v(\"New password\")]\n              ),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.$v.resetPassword.newPassword.$model,\n                    expression: \"$v.resetPassword.newPassword.$model\"\n                  }\n                ],\n                staticClass: \"form-control\",\n                class: {\n                  valid: !_vm.$v.resetPassword.newPassword.$invalid,\n                  invalid: _vm.$v.resetPassword.newPassword.$invalid\n                },\n                attrs: {\n                  type: \"password\",\n                  id: \"newPassword\",\n                  name: \"newPassword\",\n                  placeholder: _vm.$t(\"global.form['newpassword.placeholder']\"),\n                  minlength: \"4\",\n                  maxlength: \"50\",\n                  required: \"\",\n                  \"data-cy\": \"newPassword\"\n                },\n                domProps: { value: _vm.$v.resetPassword.newPassword.$model },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(\n                      _vm.$v.resetPassword.newPassword,\n                      \"$model\",\n                      $event.target.value\n                    )\n                  }\n                }\n              }),\n              _vm._v(\" \"),\n              _vm.$v.resetPassword.newPassword.$anyDirty &&\n              _vm.$v.resetPassword.newPassword.$invalid\n                ? _c(\"div\", [\n                    !_vm.$v.resetPassword.newPassword.required\n                      ? _c(\n                          \"small\",\n                          {\n                            staticClass: \"form-text text-danger\",\n                            domProps: {\n                              textContent: _vm._s(\n                                _vm.$t(\n                                  \"global.messages.validate.newpassword.required\"\n                                )\n                              )\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n              Your password is required.\\n            \"\n                            )\n                          ]\n                        )\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    !_vm.$v.resetPassword.newPassword.minLength\n                      ? _c(\n                          \"small\",\n                          {\n                            staticClass: \"form-text text-danger\",\n                            domProps: {\n                              textContent: _vm._s(\n                                _vm.$t(\n                                  \"global.messages.validate.newpassword.minlength\"\n                                )\n                              )\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n              Your password is required to be at least 4 characters.\\n            \"\n                            )\n                          ]\n                        )\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    !_vm.$v.resetPassword.newPassword.maxLength\n                      ? _c(\n                          \"small\",\n                          {\n                            staticClass: \"form-text text-danger\",\n                            domProps: {\n                              textContent: _vm._s(\n                                _vm.$t(\n                                  \"global.messages.validate.newpassword.maxlength\"\n                                )\n                              )\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n              Your password cannot be longer than 50 characters.\\n            \"\n                            )\n                          ]\n                        )\n                      : _vm._e()\n                  ])\n                : _vm._e()\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"form-group\" }, [\n              _c(\n                \"label\",\n                {\n                  staticClass: \"form-control-label\",\n                  attrs: { for: \"confirmPassword\" },\n                  domProps: {\n                    textContent: _vm._s(\n                      _vm.$t(\"global.form['confirmpassword.label']\")\n                    )\n                  }\n                },\n                [_vm._v(\"New password confirmation\")]\n              ),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.$v.resetPassword.confirmPassword.$model,\n                    expression: \"$v.resetPassword.confirmPassword.$model\"\n                  }\n                ],\n                staticClass: \"form-control\",\n                class: {\n                  valid: !_vm.$v.resetPassword.confirmPassword.$invalid,\n                  invalid: _vm.$v.resetPassword.confirmPassword.$invalid\n                },\n                attrs: {\n                  type: \"password\",\n                  id: \"confirmPassword\",\n                  name: \"confirmPassword\",\n                  placeholder: _vm.$t(\n                    \"global.form['confirmpassword.placeholder']\"\n                  ),\n                  minlength: \"4\",\n                  maxlength: \"50\",\n                  required: \"\",\n                  \"data-cy\": \"confirmPassword\"\n                },\n                domProps: {\n                  value: _vm.$v.resetPassword.confirmPassword.$model\n                },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(\n                      _vm.$v.resetPassword.confirmPassword,\n                      \"$model\",\n                      $event.target.value\n                    )\n                  }\n                }\n              }),\n              _vm._v(\" \"),\n              _vm.$v.resetPassword.confirmPassword.$anyDirty &&\n              _vm.$v.resetPassword.confirmPassword.$invalid\n                ? _c(\"div\", [\n                    !_vm.$v.resetAccount.confirmPassword.sameAsPassword\n                      ? _c(\n                          \"small\",\n                          {\n                            staticClass: \"form-text text-danger\",\n                            domProps: {\n                              textContent: _vm._s(\n                                _vm.$t(\"global.messages.error.dontmatch\")\n                              )\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n              The password and its confirmation do not match!\\n            \"\n                            )\n                          ]\n                        )\n                      : _vm._e()\n                  ])\n                : _vm._e()\n            ]),\n            _vm._v(\" \"),\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-primary\",\n                attrs: {\n                  type: \"submit\",\n                  disabled: _vm.$v.resetPassword.$invalid,\n                  \"data-cy\": \"submit\"\n                },\n                domProps: {\n                  textContent: _vm._s(_vm.$t(\"password.form.button\"))\n                }\n              },\n              [_vm._v(\"\\n          Save\\n        \")]\n            )\n          ]\n        )\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { maxLength, minLength, required, sameAs } from 'vuelidate/lib/validators';\nimport axios from 'axios';\nimport { mapGetters } from 'vuex';\nimport Component from 'vue-class-component';\nimport { Vue } from 'vue-property-decorator';\n\nconst validations = {\n  resetPassword: {\n    currentPassword: {\n      required,\n    },\n    newPassword: {\n      required,\n      minLength: minLength(4),\n      maxLength: maxLength(254),\n    },\n    confirmPassword: {\n      // prettier-ignore\n      sameAsPassword: sameAs(vm => {\n      return vm.newPassword;\n      }),\n    },\n  },\n};\n\n@Component({\n  validations,\n  computed: {\n    ...mapGetters(['account']),\n  },\n})\nexport default class ChangePassword extends Vue {\n  success: string = null;\n  error: string = null;\n  doNotMatch: string = null;\n  resetPassword: any = {\n    currentPassword: null,\n    newPassword: null,\n    confirmPassword: null,\n  };\n\n  public changePassword(): void {\n    if (this.resetPassword.newPassword !== this.resetPassword.confirmPassword) {\n      this.error = null;\n      this.success = null;\n      this.doNotMatch = 'ERROR';\n    } else {\n      this.doNotMatch = null;\n      axios\n        .post('api/account/change-password', {\n          currentPassword: this.resetPassword.currentPassword,\n          newPassword: this.resetPassword.newPassword,\n        })\n        .then(() => {\n          this.success = 'OK';\n          this.error = null;\n        })\n        .catch(() => {\n          this.success = null;\n          this.error = 'ERROR';\n        });\n    }\n  }\n\n  public get username(): string {\n    return this.$store.getters.account ? this.$store.getters.account.login : '';\n  }\n}\n","import mod from \"-!../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1[0].rules[0].use[0]!./change-password.component.ts?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1[0].rules[0].use[0]!./change-password.component.ts?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./change-password.vue?vue&type=template&id=22a31d5c&\"\nimport script from \"./change-password.component.ts?vue&type=script&lang=ts&\"\nexport * from \"./change-password.component.ts?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\DELL\\\\1_Vue\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('22a31d5c')) {\n      api.createRecord('22a31d5c', component.options)\n    } else {\n      api.reload('22a31d5c', component.options)\n    }\n    module.hot.accept(\"./change-password.vue?vue&type=template&id=22a31d5c&\", function () {\n      api.rerender('22a31d5c', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/main/webapp/app/account/change-password/change-password.vue\"\nexport default component.exports"],"sourceRoot":""}