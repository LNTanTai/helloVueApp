{"version":3,"sources":["webpack://space-1/./src/main/webapp/app/account/reset-password/finish/reset-password-finish.vue?d4b9","webpack://space-1/./src/main/webapp/app/account/reset-password/finish/reset-password-finish.component.ts","webpack://space-1/./src/main/webapp/app/account/reset-password/finish/reset-password-finish.component.ts?b53c","webpack://space-1/./src/main/webapp/app/account/reset-password/finish/reset-password-finish.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","domProps","textContent","_s","$t","_v","keyMissing","innerHTML","_e","error","success","on","click","openLogin","doNotMatch","attrs","name","role","submit","$event","preventDefault","finishReset","for","directives","rawName","value","$v","resetAccount","newPassword","$model","expression","class","valid","$invalid","invalid","type","id","placeholder","minlength","maxlength","required","input","target","composing","$set","$anyDirty","minLength","maxLength","confirmPassword","sameAsPassword","disabled","staticRenderFns","_withStripped","validations","vm","created","undefined","$route","query","key","then","catch","loginService","$root","ResetPasswordFinish","component","options","__file"],"mappings":"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","file":"app/753.a8a1f8b36ddd99491c7c.chunk.js","sourcesContent":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"row justify-content-center\" }, [\n      _c(\"div\", { staticClass: \"col-md-8\" }, [\n        _c(\n          \"h1\",\n          { domProps: { textContent: _vm._s(_vm.$t(\"reset.request.title\")) } },\n          [_vm._v(\"Reset your password\")]\n        ),\n        _vm._v(\" \"),\n        _vm.keyMissing\n          ? _c(\n              \"div\",\n              {\n                staticClass: \"alert alert-danger\",\n                domProps: {\n                  innerHTML: _vm._s(_vm.$t(\"reset.finish.messages.keymissing\"))\n                }\n              },\n              [_c(\"strong\", [_vm._v(\"The password reset key is missing.\")])]\n            )\n          : _vm._e(),\n        _vm._v(\" \"),\n        _vm.error\n          ? _c(\"div\", { staticClass: \"alert alert-danger\" }, [\n              _c(\n                \"p\",\n                {\n                  domProps: {\n                    textContent: _vm._s(_vm.$t(\"reset.finish.messages.error\"))\n                  }\n                },\n                [\n                  _vm._v(\n                    \"\\n          Your password couldn't be reset. Remember a password request is only valid for 24 hours.\\n        \"\n                  )\n                ]\n              )\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        _vm.success\n          ? _c(\"div\", { staticClass: \"alert alert-success\" }, [\n              _c(\n                \"span\",\n                {\n                  domProps: {\n                    innerHTML: _vm._s(_vm.$t(\"reset.finish.messages.success\"))\n                  }\n                },\n                [\n                  _c(\"strong\", [_vm._v(\"Your password had been reset.\")]),\n                  _vm._v(\" Please \")\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"a\",\n                {\n                  staticClass: \"alert-link\",\n                  domProps: {\n                    textContent: _vm._s(\n                      _vm.$t(\"global.messages.info.authenticated.link\")\n                    )\n                  },\n                  on: { click: _vm.openLogin }\n                },\n                [_vm._v(\"sign in\")]\n              )\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        _vm.doNotMatch\n          ? _c(\"div\", { staticClass: \"alert alert-danger\" }, [\n              _c(\n                \"p\",\n                {\n                  domProps: {\n                    textContent: _vm._s(\n                      _vm.$t(\"global.messages.error.dontmatch\")\n                    )\n                  }\n                },\n                [_vm._v(\"The password and its confirmation do not match!\")]\n              )\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        !_vm.success && !_vm.keyMissing\n          ? _c(\"div\", { staticClass: \"alert alert-warning\" }, [\n              _c(\n                \"p\",\n                {\n                  domProps: {\n                    textContent: _vm._s(_vm.$t(\"reset.finish.messages.info\"))\n                  }\n                },\n                [_vm._v(\"Choose a new password.\")]\n              )\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        !_vm.keyMissing\n          ? _c(\"div\", [\n              !_vm.success\n                ? _c(\n                    \"form\",\n                    {\n                      attrs: { name: \"form\", role: \"form\" },\n                      on: {\n                        submit: function($event) {\n                          $event.preventDefault()\n                          return _vm.finishReset()\n                        }\n                      }\n                    },\n                    [\n                      _c(\"div\", { staticClass: \"form-group\" }, [\n                        _c(\n                          \"label\",\n                          {\n                            staticClass: \"form-control-label\",\n                            attrs: { for: \"newPassword\" },\n                            domProps: {\n                              textContent: _vm._s(\n                                _vm.$t(\"global.form['newpassword.label']\")\n                              )\n                            }\n                          },\n                          [_vm._v(\"New password\")]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.$v.resetAccount.newPassword.$model,\n                              expression: \"$v.resetAccount.newPassword.$model\"\n                            }\n                          ],\n                          staticClass: \"form-control\",\n                          class: {\n                            valid: !_vm.$v.resetAccount.newPassword.$invalid,\n                            invalid: _vm.$v.resetAccount.newPassword.$invalid\n                          },\n                          attrs: {\n                            type: \"password\",\n                            id: \"newPassword\",\n                            name: \"newPassword\",\n                            placeholder: _vm.$t(\n                              \"global.form['newpassword.placeholder']\"\n                            ),\n                            minlength: \"4\",\n                            maxlength: \"50\",\n                            required: \"\",\n                            \"data-cy\": \"resetPassword\"\n                          },\n                          domProps: {\n                            value: _vm.$v.resetAccount.newPassword.$model\n                          },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.$v.resetAccount.newPassword,\n                                \"$model\",\n                                $event.target.value\n                              )\n                            }\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _vm.$v.resetAccount.newPassword.$anyDirty &&\n                        _vm.$v.resetAccount.newPassword.$invalid\n                          ? _c(\"div\", [\n                              !_vm.$v.resetAccount.newPassword.required\n                                ? _c(\n                                    \"small\",\n                                    {\n                                      staticClass: \"form-text text-danger\",\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          _vm.$t(\n                                            \"global.messages.validate.newpassword.required\"\n                                          )\n                                        )\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n                Your password is required.\\n              \"\n                                      )\n                                    ]\n                                  )\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              !_vm.$v.resetAccount.newPassword.minLength\n                                ? _c(\n                                    \"small\",\n                                    {\n                                      staticClass: \"form-text text-danger\",\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          _vm.$t(\n                                            \"global.messages.validate.newpassword.minlength\"\n                                          )\n                                        )\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n                Your password is required to be at least 4 characters.\\n              \"\n                                      )\n                                    ]\n                                  )\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              !_vm.$v.resetAccount.newPassword.maxLength\n                                ? _c(\n                                    \"small\",\n                                    {\n                                      staticClass: \"form-text text-danger\",\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          _vm.$t(\n                                            \"global.messages.validate.newpassword.maxlength\"\n                                          )\n                                        )\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n                Your password cannot be longer than 50 characters.\\n              \"\n                                      )\n                                    ]\n                                  )\n                                : _vm._e()\n                            ])\n                          : _vm._e()\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"form-group\" }, [\n                        _c(\n                          \"label\",\n                          {\n                            staticClass: \"form-control-label\",\n                            attrs: { for: \"confirmPassword\" },\n                            domProps: {\n                              textContent: _vm._s(\n                                _vm.$t(\"global.form['confirmpassword.label']\")\n                              )\n                            }\n                          },\n                          [_vm._v(\"New password confirmation\")]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.$v.resetAccount.confirmPassword.$model,\n                              expression:\n                                \"$v.resetAccount.confirmPassword.$model\"\n                            }\n                          ],\n                          staticClass: \"form-control\",\n                          class: {\n                            valid: !_vm.$v.resetAccount.confirmPassword\n                              .$invalid,\n                            invalid:\n                              _vm.$v.resetAccount.confirmPassword.$invalid\n                          },\n                          attrs: {\n                            type: \"password\",\n                            id: \"confirmPassword\",\n                            name: \"confirmPassword\",\n                            placeholder: _vm.$t(\n                              \"global.form['confirmpassword.placeholder']\"\n                            ),\n                            minlength: \"4\",\n                            maxlength: \"50\",\n                            required: \"\",\n                            \"data-cy\": \"confirmResetPassword\"\n                          },\n                          domProps: {\n                            value: _vm.$v.resetAccount.confirmPassword.$model\n                          },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.$v.resetAccount.confirmPassword,\n                                \"$model\",\n                                $event.target.value\n                              )\n                            }\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _vm.$v.resetAccount.confirmPassword.$anyDirty &&\n                        _vm.$v.resetAccount.confirmPassword.$invalid\n                          ? _c(\"div\", [\n                              !_vm.$v.resetAccount.confirmPassword\n                                .sameAsPassword\n                                ? _c(\n                                    \"small\",\n                                    {\n                                      staticClass: \"form-text text-danger\",\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          _vm.$t(\n                                            \"global.messages.error.dontmatch\"\n                                          )\n                                        )\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n                The password and its confirmation do not match!\\n              \"\n                                      )\n                                    ]\n                                  )\n                                : _vm._e()\n                            ])\n                          : _vm._e()\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-primary\",\n                          attrs: {\n                            type: \"submit\",\n                            disabled: _vm.$v.resetAccount.$invalid,\n                            \"data-cy\": \"submit\"\n                          },\n                          domProps: {\n                            textContent: _vm._s(_vm.$t(\"password.form.button\"))\n                          }\n                        },\n                        [_vm._v(\"\\n            Save\\n          \")]\n                      )\n                    ]\n                  )\n                : _vm._e()\n            ])\n          : _vm._e()\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import axios from 'axios';\nimport { maxLength, minLength, required, sameAs } from 'vuelidate/lib/validators';\nimport { Inject, Vue, Component } from 'vue-property-decorator';\nimport LoginService from '@/account/login.service';\n\nconst validations = {\n  resetAccount: {\n    newPassword: {\n      required,\n      minLength: minLength(4),\n      maxLength: maxLength(254),\n    },\n    confirmPassword: {\n      // prettier-ignore\n      sameAsPassword: sameAs(vm => {\n      return vm.newPassword;\n      }),\n    },\n  },\n};\n\n@Component({\n  validations,\n})\nexport default class ResetPasswordFinish extends Vue {\n  @Inject('loginService')\n  private loginService: () => LoginService;\n\n  public doNotMatch: string = null;\n  public success: string = null;\n  public error: string = null;\n  public keyMissing: boolean = null;\n  public key: any;\n  public resetAccount: any = {\n    newPassword: null,\n    confirmPassword: null,\n  };\n\n  created(): void {\n    if (this.$route !== undefined && this.$route.query !== undefined && this.$route.query.key !== undefined) {\n      this.key = this.$route.query.key;\n    }\n    this.keyMissing = !this.key;\n  }\n\n  public finishReset(): void {\n    this.doNotMatch = null;\n    this.success = null;\n    this.error = null;\n    if (this.resetAccount.newPassword !== this.resetAccount.confirmPassword) {\n      this.doNotMatch = 'ERROR';\n    } else {\n      axios\n        .post('api/account/reset-password/finish', { key: this.key, newPassword: this.resetAccount.newPassword })\n        .then(() => {\n          this.success = 'OK';\n        })\n        .catch(() => {\n          this.success = null;\n          this.error = 'ERROR';\n        });\n    }\n  }\n\n  public openLogin() {\n    this.loginService().openLogin((<any>this).$root);\n  }\n}\n","import mod from \"-!../../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1[0].rules[0].use[0]!./reset-password-finish.component.ts?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../../../../../../node_modules/ts-loader/index.js??clonedRuleSet-1[0].rules[0].use[0]!./reset-password-finish.component.ts?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./reset-password-finish.vue?vue&type=template&id=237f90bc&\"\nimport script from \"./reset-password-finish.component.ts?vue&type=script&lang=ts&\"\nexport * from \"./reset-password-finish.component.ts?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\Users\\\\DELL\\\\1_Vue\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('237f90bc')) {\n      api.createRecord('237f90bc', component.options)\n    } else {\n      api.reload('237f90bc', component.options)\n    }\n    module.hot.accept(\"./reset-password-finish.vue?vue&type=template&id=237f90bc&\", function () {\n      api.rerender('237f90bc', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/main/webapp/app/account/reset-password/finish/reset-password-finish.vue\"\nexport default component.exports"],"sourceRoot":""}